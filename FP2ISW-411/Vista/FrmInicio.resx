<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>